<launch>
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthroughx" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/camera/depth/color/points" />
    <rosparam>
      input_frame: camera_color_optical_frame
      filter_field_name: x
      filter_limit_min: 0.0 <!---N0.01-->
      filter_limit_max: 0.01<!---0.02-->
      filter_limit_negative: False
    </rosparam>
  </node>
    <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthroughy" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/passthroughx/output" />
    <rosparam>
      input_frame: camera_color_optical_frame
      filter_field_name: y
      filter_limit_min: 0.0 <!---N0.01-->
      filter_limit_max: 0.01 <!---0.02-->
      filter_limit_negative: False
    </rosparam>
  </node>
      <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthroughz" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/passthroughy/output" />
    <rosparam>
      input_frame: camera_color_optical_frame
      filter_field_name: z
      filter_limit_min: 0.0   <!---N0.01-->
      filter_limit_max: 0.5 <!---0.006-->
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/passthroughz/output" />
    <rosparam>
      input_frame: camera_color_optical_frame
      <!--filter_field_name: z-->
      <!--filter_limit_min: -0.015-->
      <!--filter_limit_max: 0.009-->
      <!--filter_limit_negative: False-->
      leaf_size: 0.005
      <!-- leaf_size: 0.005 -->
    </rosparam>
  </node>
<!--  <node pkg="nodelet" type="nodelet" name="cropbox" args="load pcl/CropBox box_filter_pcl_manager" output="screen">
    <remap from="~input" to="/camera/depth/color/points" />
    <rosparam>
      min_x: -0.0
      max_x: 0.5
      min_y: -0.6
      max_y: 0.1
      min_z: 0.0
      max_z: 0.5
  </rosparam>
</node-->

  <!-- Estimate point normals >
  <node pkg="nodelet" type="nodelet" name="normal_estimation" args="load pcl/NormalEstimation pcl_manager" output="screen">
    <remap from="~input" to="/voxel_grid/output" />
    <remap from="~normals" to="/normal_estimation/output" />
    <rosparam>
      # -[ Mandatory parameters
      k_search: 0 
      radius_search: 0.06
      # Set the spatial locator. Possible values are: 0 (ANN), 1 (FLANN), 2 (organized)
      spatial_locator: 2
    </rosparam>
  </node-->

</launch>

