import numpy as np
import matplotlib.pyplot as plt

def skew_mat(x):
    mat =  np.array([[0, x[2], -x[1]],
                     [-x[2], 0, x[0]],
                     [x[1], -x[0], 0]])
    return mat

g = np.array([0.0, 0.0, -9.81]).T

R = np.array([
    [[0,1,0],[1,0,0],[0,0,-1]],
    [[0,1,0],[-1,0,0],[0,0,1]],
    [[0,1,0],[1,0,0],[0,0,-1]],
    [[0,0,-1],[1,0,0],[0,-1,0]],
    [[0,0,1],[-1,0,0],[0,-1,0]],
    [[1,0,0],[0,0,1],[0,-1,0]],
    [[-1,0,0],[0,0,-1],[0,-1,0]],
    [[0,1,0],[0,0,1],[1,0,0]],
    [[0,0,-1],[0,1,0],[-1,0,0]],
    [[0,-1,0],[0,0,-1],[1,0,0]]
    ])

G = np.array([])
A = np.zeros((3*R.shape[0], 3))

for i in range(R.shape[0]):
    g_ = R[i] @g
    A_ = skew_mat(g_)
    G = np.concatenate((G,g_))
    A[3*i:3*(i+1), :] = A_

G = G.T

F = np.array([
            [-3, -0.037, 35.15],
            [-2.48, 0.0635, -33.36],
            [-2.8, 0.4, 34.25],
            [31.95, -0.097, 0.9547],
            [-38.255,-0.067443,0.4123],
            [-4.763,-34.695,-0.2772],
            [-2.58,34.70,1.238],
            [-3.49, -34.36, -0.011],
            [31.68, -0.0046, 0.930],
            [-3.27, 35.099, 0.0986]
            ])
# calculated by taking mean in two opposite direction for each force and torques. 
F_bias = np.array([-3.15, 0.1867, 0.8952])
T_bias = np.array([0.0918, -0.0558, -0.0525])

F = F-F_bias
F = F.reshape(-1).T

Torques = np.array([
            [0.1107, -0.6800, -0.08129],
            [0.1261, 0.45548, -0.028116],
            [0.06, -0.45, 0.042],
            [0.052, 2.72, -0.112],
            [0.1316, -2.7617, -0.2061],
            [2.85, -0.08262, -0.7051],
            [-2.74, -0.0526, 0.61005],
            [2.8615, -0.1055, -0.6196],
            [0.0738, 2.6319, -0.0258],
            [-2.71, 0.0168, 0.84262]
            ])
Torques = Torques-T_bias
Torques = Torques.reshape(-1).T

mass = (G.T@ F)/(G.T @ G)
com =  (np.linalg.pinv(A) @ Torques)/mass 

print(mass)
print(com)